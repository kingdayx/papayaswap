import { Contract } from 'ethers';
import { MockProvider } from '@ethereum-waffle/provider';
export function validateContract(contract) {
    validateCondition(contract instanceof Contract, 'argument must be a contract');
}
export function validateMockProvider(provider) {
    validateCondition(provider instanceof MockProvider, 'contract.provider must be a MockProvider');
}
export function validateFnName(fnName, contract) {
    validateCondition(typeof fnName === 'string', 'function name must be a string');
    validateCondition(fnName in contract.interface.functions, 'function must exist in provided contract');
}
function validateCondition(condition, msg) {
    if (!condition) {
        throw new TypeError(msg);
    }
}
