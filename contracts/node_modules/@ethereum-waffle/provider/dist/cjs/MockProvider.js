"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
const CallHistory_1 = require("./CallHistory");
const defaultAccounts_1 = require("./defaultAccounts");
const ganache_core_1 = __importDefault(require("ganache-core"));
class MockProvider extends ethers_1.providers.Web3Provider {
    constructor(options) {
        super(ganache_core_1.default.provider({ accounts: defaultAccounts_1.defaultAccounts, ...options }));
        this.options = options;
        this._callHistory = new CallHistory_1.CallHistory();
        this._callHistory.record(this);
    }
    getWallets() {
        var _a, _b;
        const items = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.accounts) !== null && _b !== void 0 ? _b : defaultAccounts_1.defaultAccounts;
        return items.map((x) => new ethers_1.Wallet(x.secretKey, this));
    }
    createEmptyWallet() {
        return ethers_1.Wallet.createRandom().connect(this);
    }
    clearCallHistory() {
        this._callHistory.clear();
    }
    get callHistory() {
        return this._callHistory.getCalls();
    }
}
exports.MockProvider = MockProvider;
